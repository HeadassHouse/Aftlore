# import '../utils/utils.graphql'
# import './character.graphql'
# import '../map/map.graphql'
# import '../ruleset/ruleset.graphql'
# import * from '../utils/pagination.graphql'

type Campaign {
    _id: ID
    name: String
    dm: ID
    description: String
    characters: [Character]
    ruleSet: Ruleset
    maps(
        first: Int
        last: Int
        after: String
        before: String
    ): MapConnection
}

type CampaignEdge {
    cursor: String!
    node: Campaign!
}

type CampaignConnection {
    edges: [CampaignEdge]!
    pageInfo: PageInfo!
}

input CampaignInput {
    name: String!
    dm: ID!
    description: String!
    characters: [ID]
    ruleSet: RulesetInput
    maps: [ID]!
}

input CampaignEdit {
    name: String
    dm: ID
    description: String
    characters: [ID]
    ruleSet: RulesetInput
    maps: [ID]
}

type Query {
    campaign(_id: ID!): Campaign
    campaigns(
        where: And!
        first: Int
        last: Int
        after: String
        before: String
    ): CampaignConnection
}

type Mutation {
    createCampaign(campaign: CampaignInput!): Campaign
    editCampaign(campaign: CampaignEdit!): Campaign
    deleteCampaign(_id: ID!): Campaign
}