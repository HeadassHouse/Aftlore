# import * from './tile.graphql'
# import * from '../utils/utils.graphql'

input MapInput {
    imageLink: String!
    name: String!
    tiles: [TileInput]
}

input MapUpdate {
    imageLink: String
    name: String
    tiles(id: ID): [TileInput]
}

type Map {
    _id: ID
    imageLink: String
    name: String
    tiles: [Tile]
}

type MapEdge {
    node: Map!
    cursor: String!
}

type MapCursor {
    edges: [MapEdge]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type Query {
    map(_id: String!): Map
    maps(where: And!): MapCursor
}

type Mutation {
    createMap(map: MapInput!): Map
    editMap(_id: ID!, update: MapUpdate!): Map
    deleteMap(_id: ID!): [Map]
}

type Subscription {
  mapUpdated: Map
}
