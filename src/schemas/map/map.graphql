# import * from './tile.graphql'
# import * from '../utils/utils.graphql'
# import * from '../utils/pagination.graphql'

input MapInput {
    imageLink: String!
    name: String!
    tiles: [TileInput]
}

input MapUpdate {
    imageLink: String
    name: String
    tiles: [TileInput]
}

type Map {
    _id: ID
    imageLink: String
    name: String
    tiles: [Tile]
}

type MapEdge {
    cursor: String!
    node: Map!
}

type MapConnection {
    edges: [MapEdge]!
    pageInfo: PageInfo!
}

type Query {
    map(_id: String!): Map
    maps(
        where: And!
        first: Int
        last: Int
        after: String
        before: String
    ): MapConnection
}

type Mutation {
    createMap(map: MapInput!): Map
    editMap(_id: ID!, update: MapUpdate!): Map
    deleteMap(_id: ID!): [Map]
}

type Subscription {
  mapUpdated: Map
}
