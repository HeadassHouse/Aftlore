# import '../utils/utils.graphql'
# import './userestrict.graphql'
# import './onuse.graphql'
# import '../effect.graphql'
type AbilityDefinition{
    _id: ID
    name: String
    stackable: Boolean
    useRestriction: UseRestriction
    onUse: AbilityOnUse
    effectOnUse: [AbilityEffect]
    
}
input AbilityDefinitionInput{
    name: String!
    stackable: Boolean!
    useRestriction: UseRestriction!
    onUse: AbilityOnUse!
    effectOnUse: [AbilityEffect]!
    
}

input AbilityDefinitionEdit{
    name: String
    stackable: Boolean
    useRestriction: UseRestriction
    onUse: AbilityOnUse
    effectOnUse: [AbilityEffect]
    
}

type Query {
    getAbilityDefinition(_id: ID!): AbilityDefinition
}

type Mutation {
    createAbilityDefinition(ruleset: AbilityDefinitionInput!): StatusCode
    editAbilityDefinition(ruleset: AbilityDefinitionEdit!): StatusCode
    deleteAbilityDefinition(_id: ID!): StatusCode
}

